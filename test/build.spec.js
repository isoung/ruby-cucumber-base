const execSync = require('child_process').execSync;
const should = require('chai').should;
const fs = require('fs-extra');
const mockFs = require('mock-fs');

const build = require('./../build');

describe('Build script', () => {
  before(function() {
    mockFs({
      'GEMFILE': '',
      'features/support/env.rb': '',
      'templates/web-testing-base/web.steps.rb': '',
      'templates/web-testing-base/web_example.feature': '',
      'features/stepDefinitions': {},
      'features': {},
      'templates/capybara/custom_env.rb': "require('capybara/cucumber')",
      'templates/capybara/custom_gemfile.rb': "gem 'capybara'",
    });
  });

  after(function() {
    mockFs.restore();
  });

  it('should successfully add gems to the GEMFILE', function() {
    build.addToGemfile('Custom comment', `gem 'testGem'`);
    const gemfile = fs.readFileSync('GEMFILE', 'utf-8');

    should().equal(gemfile.includes('# Custom comment'), true, 'Generated custom gem comment was missing');
    should().equal(gemfile.includes("gem 'testGem'"), true, 'testGem was missing from gemfile');
  });

  it('should successfully add requires to the env file', function() {
    build.addToEnv('Custom code', "require 'testGem/testMethod'");
    const env = fs.readFileSync('features/support/env.rb', 'utf-8');

    should().equal(env.includes('# Custom code'), true, 'Generated code comment was missing');
    should().equal(env.includes("require 'testGem/testMethod'"), true, 'require was missing from gemfile');
  });

  it('should successfully build capybara requirements', () => {
    build.capybara();
    const env = fs.readFileSync('features/support/env.rb', 'utf-8');
    const gemfile = fs.readFileSync('GEMFILE', 'utf-8');

    should().equal(gemfile.includes('# Generated by capybara/selenium gems'), true, 'Generated custom gem comment was missing');
    should().equal(gemfile.includes("gem 'capybara'"), true, 'capybara was missing from gemfile');

    should().equal(env.includes('# Generated by capybara/selenium code'), true, 'Generated code comment was missing');;
    should().equal(env.includes("require('capybara/cucumber')"), true, 'require was missing from env');
  });

  it('should successfully build web-testing-base requirements', () => {
    build.webTestingBase();

    should().equal(fs.existsSync('features/stepDefinitions/web.steps.rb'), true);
    should().equal(fs.existsSync('features/web_example.feature'), true);
  });
});
