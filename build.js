const fs = require('fs-extra');
const yargs = require('yargs');

const args = yargs.argv;

exports.addToGemfile = function(comment, gem) {
  let gemfile = fs.readFileSync('GEMFILE', 'utf-8');
  gemfile += gemfile.includes(`# ${comment}`) ? `\ng${gem}` : `\n# ${comment}\n${gem}`;
  fs.writeFileSync('GEMFILE', gemfile, { flag: 'w' });
}

exports.addToEnv = function(comment, req) {
  let env = fs.readFileSync('features/support/env.rb', 'utf-8');
  env += env.includes(`# ${comment}`) ? `\n${req}` : `\n# ${comment}\n${req}`;
  fs.writeFileSync('features/support/env.rb', env, { flag: 'w' });
}

exports.capybara = function() {
  this.addToGemfile('Generated by capybara/selenium gems', fs.readFileSync('./templates/capybara/custom_gemfile.rb', 'utf-8'));
  this.addToEnv('Generated by capybara/selenium code', fs.readFileSync('./templates/capybara/custom_env.rb', 'utf-8'));
}

exports.webTestingBase = function() {
  fs.renameSync('templates/web-testing-base/web.steps.rb', 'features/stepDefinitions/web.steps.rb')
  fs.renameSync('templates/web-testing-base/web_example.feature', 'features/web_example.feature')
}

// Build steps. Either build or remove unwanted options.
if (args['capybara/selenium']) {
  capybara();
}

if (args['web-testing-base']) {
  webTestingBase();
}

// Clean up all files that are not needed by the framework.
if (args.clean) {
  fs.unlinkSync('build.js');
  fs.unlinkSync('options.json');
  fs.unlinkSync('package.json');

  fs.removeSync('node_modules');
  fs.removeSync('templates');
  fs.removeSync('test');
  fs.removeSync('.gitignore');
  fs.removeSync('.travis.yml');
}

